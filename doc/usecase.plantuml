@startuml

left to right direction

actor User
actor Service_Owner
actor Group_Admin

User <|-- Service_Owner
User <|-- Group_Admin

package "Use Cases for User" {
    (perform authentication) as PA
    (create new service) as CNS
    (list services) as LS
    (call service) as CS
    (change password) as CP
    (list my user groups) as LMUG
    (create new user group) as CNUG
    (List user groups invitations) as LUGI
}

User -> PA
User -> CNS
User -> LS
User -> CS
User -> CP
User -> LMUG
User -> CNUG
User -> LUGI

package "Use Cases for Service Owner" as SO{
    (edit service username) as ESU
    (edit service password) as ESP
    (edit any additional service informations) as EASI
    (delete service) as DS
    
    (give authorization to user) as G_AUTH
    (remove authorization to user) as R_AUTH
    (add user to service) as AUTS
    (invite usergroup to service) as IUFS
    (remove group from service) as RGFS
    (remove user from service) as RUFS
    (list added users) as LAU
    (list added usergroup) as LAG
}

(request authorization) as AUTH

Service_Owner -> ESU
Service_Owner -> ESP
Service_Owner -> EASI
Service_Owner -> DS
SO ..|> AUTH : <<include>>
Service_Owner -> G_AUTH
Service_Owner -> R_AUTH
Service_Owner -> AUTS
Service_Owner -> IUFS
Service_Owner -> RGFS
Service_Owner -> RUFS
Service_Owner -> LAU
Service_Owner -> LAG

package "Use Cases for Group Admin" {
    (invite to usergroup) as ITG
    (delete usergroup) as DG
    (remove user from usergroup) as RUFG
    (list service invitations) as LSI
    (approve service invitations) as ASI
    (except service invitation) as ESI
    (remove service) as RS
    (list group specific services) as LGSS
}

Group_Admin -> ITG
Group_Admin -> DG
Group_Admin -> RUFG
Group_Admin -> LSI
Group_Admin -> ASI
Group_Admin -> ESI
Group_Admin -> RS
Group_Admin -> LGSS

@enduml