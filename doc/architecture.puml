@startuml

class User{

    username: string
    credentials: UserCredentials
    -owned: List<Service>
    callable: List<Service>
    InvitedGroups: List<Invitation>
    ownedGroups: List<Group>
    
    +listOwnedServices(): List<Service>
    {static}authenticate(Param1..or Credential_obj): User
    addInvitation(:Invitation)
    listServices(): List<Service>
    changeUserCredentials(:UserCredentials)

    listUsergroups(): List<Group>
    listUsergroupInvitation(): List<Invitation>

    requestAuthorization(:Service)
}

class Invitation{

    sendername: string
    usergroupname: string

}

class Service{

    servicename: string
    credentials: ServiceCredentials
    
    {static}createService(:string, :User, :ServiceCredentials): Service
    authorized: List<User>
    users: List<User>
    groups: List<Group>
    invitations: List<Invitation>

    giveAuthorizationToUser(:User)
    sendInvitation(:Group)
    
    deleteService()
    callService()

    
}

class UserCredentials{

    username: string
    password: string
    
}

class ServiceCredentials{
    
    

}

class Group{
    groupname: string
    users: List<User>
    sentUserInvitations: List<Invitation>
    listServiceInvitation(): List<Invitation>

    {static}createUsergroup(:groupname, ): Group
    sendInvitation(:User)
    addServiceInvitation(:Invitation)
}

@enduml